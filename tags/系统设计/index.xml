<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>系统设计 on LX 知识库</title><link>https://namejlt.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/</link><description>Recent content in 系统设计 on LX 知识库</description><generator>Hugo -- gohugo.io</generator><language>zh-CN</language><lastBuildDate>Mon, 21 Jul 2025 22:00:00 +0800</lastBuildDate><atom:link href="https://namejlt.github.io/tags/%E7%B3%BB%E7%BB%9F%E8%AE%BE%E8%AE%A1/index.xml" rel="self" type="application/rss+xml"/><item><title>支付系统设计</title><link>https://namejlt.github.io/posts/tech/practice/backend/payment-service/</link><pubDate>Mon, 21 Jul 2025 22:00:00 +0800</pubDate><guid>https://namejlt.github.io/posts/tech/practice/backend/payment-service/</guid><description>
&lt;h2 id="摘要">摘要&lt;/h2>
&lt;p>本方案旨在设计一个支持全球多PSP（Payment Service Provider）的统一支付平台。平台核心功能包括&lt;strong>聚合收单&lt;/strong>、&lt;strong>批量付款&lt;/strong>、&lt;strong>内部记账&lt;/strong>和&lt;strong>自动化对账清算&lt;/strong>。设计遵循业界领先的实践，强调系统的&lt;strong>高可用&lt;/strong>、&lt;strong>高一致性&lt;/strong>、&lt;strong>安全&lt;/strong>与&lt;strong>可扩展性&lt;/strong>，并采用微服务架构实现功能解耦。&lt;/p></description></item><item><title>通用多语言（i18n）服务设计</title><link>https://namejlt.github.io/posts/tech/practice/backend/i18n-system/</link><pubDate>Wed, 16 Jul 2025 10:00:00 +0800</pubDate><guid>https://namejlt.github.io/posts/tech/practice/backend/i18n-system/</guid><description>
&lt;h2 id="需求">需求&lt;/h2>
&lt;p>面向国际市场，IT系统需提供多语言服务，一个通用的多语言服务设计比较重要。&lt;/p>
&lt;p>这套设计旨在实现&lt;strong>集中化管理&lt;/strong>、&lt;strong>高性能&lt;/strong>、&lt;strong>高可用&lt;/strong>和&lt;strong>易于接入&lt;/strong>的目标，并提供一个生产可用的 Golang SDK 详细示例。&lt;/p></description></item></channel></rss>